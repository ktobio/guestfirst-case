/**********************************************************************************File        : guestfirst-case-b.do  <--- this should be the exact name of THIS documentAuthor      : Kristina Tobio Created     : 17 Nov 2016Modified    : 17 Nov 2016Description : .do file for guestfirst Case Part B **********************************************************************************/// these commands prepare your computer for the data and analysis// this finds and closes open log filescapture log close        // this clears Stata's data memory so new data can be loadedclear       // this makes it so you don't have to keep pressing return/enter to scroll through resultsset more off          // this sets memory sizeset mem 100m       // this keeps everything visible on a normal monitor or laptop screenset linesize 200    // cd means "change directory"// you need to change this to the location on your computer where you are storing the .do and data files*cd "/Users/ktobio/Desktop/Jeff/Course/guestfirst/guestfirst-case/"       // this creates a log file, which will record all of the commands and outputs from this .do file // log files should be placed in a folder named "logs" in your directory log using "logs/guestfirst-case-b", replace// Walking through the Teaching Notes// Part 1: Store24// We insheet the Store24 data - Talk to Jeff, I don't think we have this data yet. Not in the Store24 or GuestFirst spreadsheets// Part 2: Testing for Lagged Effects at GuestFirstuse "data/guestfirst-case-data-part-b.dta"// Step 1: Organize the data by hotel and then year by using the "sort" commandsort property year// Step 2: Create a new variable that represents the lag of the independent variable// _n is the observation count, so _n-1 takes the value of loyal that is one less than the current observationgenerate lagloyal=loyal[_n-1]// Step 3: Remove from the analysis all rows that have non-sensible lagged valuesreplace lagloyal=. if year==1996// Step 2 and 3 are a bit clunky, and leave room for error.// Here is a better way of doing it// First, rename lagloyal so that we can compare the results of our new version to this old version, to check our workrename lagloyal lagloyal_v1// Organize data by hotel and year againsort property year// Use the "by" command to insure the lags are only being created WITHIN the same propertyby property: gen lagloyal=loyal[_n-1]// Check the workcountcount if lagloyal==lagloyal_v1// Drop our "checking" variabledrop lagloyal_v1// Step 4: Run the regression analysis with and without lagged variables// This dataset includes the dummy variables for the properties. Once again, we can type "d1-d42" to put all the dummies into the regression, we don't have to type them one at a timeregress revpar loyal comprevpar d1-d42regress revpar lagloyal loyal comprevpar d1-d42// because we created some new variables, we want to save this dataset in case we want to use it latersave "data/guestfirst-case-data-data-part-b-new-variables.dta", replace// closes your loglog close// drops all data from Stata's memoryclear